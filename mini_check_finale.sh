#!/usr/bin/env bash
# Mini check finale prima del via
# Sostituisci <HOST>, <SESSION_ID>, <MANUS_WEBHOOK_SECRET_REALE> con i tuoi valori

echo "üîç MINI CHECK FINALE PRIMA DEL VIA"
echo "=================================="
echo "Sostituisci <HOST>, <SESSION_ID>, <MANUS_WEBHOOK_SECRET_REALE> con i tuoi valori"
echo ""

echo "üìã CHECK LIST:"
echo "‚Ä¢ Health deve dare 200 sia in GET che in HEAD"
echo "‚Ä¢ Le admin route richiedono Cookie/Token (atteso 401/403 senza)"
echo "‚Ä¢ La firma HMAC va calcolata sul body esatto che invii"
echo ""

echo "üß™ TEST RAPIDI CON STATUS CODE:"
echo "================================"

echo "1Ô∏è‚É£ Health GET + HEAD:"
echo "curl -sS https://<HOST>/webhooks/manus/hooks/health -w \" ‚Üí %{http_code}\n\""
echo "curl -sS -I https://<HOST>/webhooks/manus/hooks/health -w \" ‚Üí %{http_code}\n\" | head -n1"
echo "Atteso: 200 per entrambi"
echo ""

echo "2Ô∏è‚É£ Admin senza auth (negativo):"
echo "curl -sS -X POST https://<HOST>/admin/manus/mapping/create \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{\"manus_user_id\":\"u_test\",\"syn_user_id\":42,\"email\":\"test@example.com\"}' \\"
echo "  -w \" ‚Üí %{http_code}\n\""
echo "Atteso: 401 o 403"
echo ""

echo "3Ô∏è‚É£ Admin con auth (positivo):"
echo "curl -sS -X POST https://<HOST>/admin/manus/mapping/create \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -H \"Cookie: session=<SESSION_ID>\" \\"
echo "  -d '{\"manus_user_id\":\"u_test\",\"syn_user_id\":42,\"email\":\"test@example.com\"}' \\"
echo "  -w \" ‚Üí %{http_code}\n\""
echo "Atteso: 200"
echo ""

echo "4Ô∏è‚É£ Webhook firma sbagliata (negativo):"
echo "BAD_SIG=deadbeef"
echo "BODY='{\"course_id\":\"COURSE123\",\"manus_user_id\":\"u_test\",\"email\":\"test@example.com\"}'"
echo "curl -sS -X POST https://<HOST>/webhooks/manus/hooks \\"
echo "  -H \"X-Manus-Event: COURSE_COMPLETED\" \\"
echo "  -H \"X-Manus-Signature: \$BAD_SIG\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d \"\$BODY\" \\"
echo "  -w \" ‚Üí %{http_code}\n\""
echo "Atteso: 401"
echo ""

echo "5Ô∏è‚É£ Webhook firma corretta (positivo):"
echo "SECRET='<MANUS_WEBHOOK_SECRET_REALE>'"
echo "BODY='{\"course_id\":\"COURSE123\",\"manus_user_id\":\"u_test\",\"email\":\"test@example.com\"}'"
echo "SIG=\$(printf \"%s\" \"\$BODY\" | openssl dgst -sha256 -hmac \"\$SECRET\" -r | awk '{print \$1}')"
echo "curl -sS -X POST https://<HOST>/webhooks/manus/hooks \\"
echo "  -H \"X-Manus-Event: COURSE_COMPLETED\" \\"
echo "  -H \"X-Manus-Signature: \$SIG\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d \"\$BODY\" \\"
echo "  -w \" ‚Üí %{http_code}\n\""
echo "Atteso: 200"
echo ""

echo "6Ô∏è‚É£ Coverage rebuild:"
echo "curl -sS -X POST https://<HOST>/admin/manus/coverage/rebuild/42 \\"
echo "  -H \"Cookie: session=<SESSION_ID>\" \\"
echo "  -w \" ‚Üí %{http_code}\n\""
echo "Atteso: 200"
echo ""

echo "üîç VERIFICHE DB RAPIDE (opzionali):"
echo "==================================="
echo "sqlite3 gestione.db 'SELECT COUNT(*) FROM manus_user_mapping;'"
echo "sqlite3 gestione.db 'SELECT COUNT(*) FROM training_coverage_report;'"
echo ""

echo "‚ö° TIP PER VALIDARE AL VOLO:"
echo "============================"
echo "Aggiungi -w \" ‚Üí %{http_code}\n\" ai curl per vedere lo status:"
echo "curl -sS https://<HOST>/webhooks/manus/hooks/health -w \" ‚Üí %{http_code}\n\""
echo ""

echo "üö® SE QUALCOSA NON TORNA (super breve):"
echo "======================================="
echo "‚Ä¢ 401/403 su admin ‚Üí manca Cookie/Token"
echo "‚Ä¢ 401 su webhook ‚Üí secret/firma: ricalcola SIG dal body identico"
echo "‚Ä¢ 200 ma coverage invariato ‚Üí crea mapping (test 3) ‚Üí rifai rebuild (test 6)"
echo "‚Ä¢ Timeout/504 ‚Üí journalctl -u gunicorn -n 80 --no-pager e riprova"
echo ""

echo "üéØ ORDINE DI ESECUZIONE CONSIGLIATO:"
echo "===================================="
echo "1. Health (GET + HEAD) ‚Üí 200"
echo "2. Admin senza auth ‚Üí 401/403"
echo "3. Admin con auth ‚Üí 200"
echo "4. Webhook firma sbagliata ‚Üí 401"
echo "5. Webhook firma corretta ‚Üí 200"
echo "6. Coverage rebuild ‚Üí 200"
echo "7. Verifica DB (opzionale)"
echo ""

echo "‚úÖ Se tutti i test passano ‚Üí GO-LIVE PRONTO!"
echo "‚ùå Se qualcosa fallisce ‚Üí controlla troubleshooting sopra"
